// $grid-breakpoints: (
// //   mobile: 0,
// //   tablet-portrait-up: 576px,
// //   tablet-landscape-up: 768px,
// //   desktop-up: 992px,
// //   big-desktop-up: 1200px

// ) !default;


@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
//media-breakpoint-up

@mixin min-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
        
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}


// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(mobile, ( mobile: 0, tablet-portrait-up: 576px, tablet-landscape-up: 768px, desktop-up: 992px, big-desktop-up: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(tablet-portrait-up, ( mobile: 0, tablet-portrait-up: 576px, tablet-landscape-up: 768px, desktop-up: 992px, big-desktop-up: 1200px))
//    Returns "-tablet-portrait-up"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
    @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
  }